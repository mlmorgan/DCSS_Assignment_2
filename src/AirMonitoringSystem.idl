module AirMonitoringSystem {
    struct NoxReading {
        double date;
        string station_name;
        long value;
    };

    typedef sequence<NoxReading> Log_of_alarm_readings;
    typedef sequence<NoxReading> Set_of_readings;

    interface MonitoringStation {
        readonly attribute string name;
        readonly attribute string location;
        NoxReading get_reading();
        void activate();
        void deactivate();
        void reset();
    };

    interface RegionalCentre {
        readonly attribute string name;
        readonly attribute string location;
        readonly attribute Log_of_alarm_readings log;
        void raise_alarm(in NoxReading alarmReading);
        Set_of_readings take_readings();
        void add_monitoring_station(in string station_name);
    };

    interface MonitoringCentre {
        void raise_alarm(in NoxReading alarm_reading);
        void register_agency(in string name, in string contact_details, in string area_of_interest);
        void register_regional_centre(in string centre_name);
    };
};